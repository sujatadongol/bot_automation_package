{"version":3,"file":"index.js","sources":["../app/utils/config.js","../app/reducers.js","../app/configureStore.js","../app/app.js"],"sourcesContent":["const config = {\n  env: process.env.NODE_ENV || 'production',\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'https://api.anydone.com',\n  mqttURL: process.env.REACT_APP_MQTT_BASE_URL || 'ws.anydone.com',\n  projectEnv: process.env.PROJECT_ENV || 'production',\n  endpoints: {},\n  subDomain: process.env.SUBDOMAIN || 'anydone.com',\n  deskUrl: process.env.DESK_URL || 'https://desk.anydone.com',\n  inboxUrl: process.env.INBOX_URL || 'https://inbox.anydone.com',\n};\n\nconsole.log({ config }, '.......');\nexport default config;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from 'utils/history';\nimport globalReducer from 'containers/App/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    global: globalReducer,\n    router: connectRouter(history),\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}, history) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    if (window.__SAGA_MONITOR_EXTENSION__)\n      reduxSagaMonitorOptions = {\n        sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n      };\n    /* eslint-enable */\n  }\n  const loggerMiddleware = createLogger();\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  if (process.env.PROJECT_ENV !== 'production') {\n    middlewares.push(loggerMiddleware);\n  }\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const store = createStore(\n    createReducer(),\n    initialState,\n    composeEnhancers(...enhancers),\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  //   if (module.hot) {\n  //     module.hot.accept('./reducers', () => {\n  //       store.replaceReducer(createReducer(store.injectedReducers));\n  //     });\n  //   }\n\n  return store;\n}\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\n// Needed for redux-saga es6 generator support\nimport '@babel/polyfill';\n\n// Import all the third party stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport FontFaceObserver from 'fontfaceobserver';\nimport history from 'utils/history';\nimport 'sanitize.css/sanitize.css';\nimport { TreeleafStorage } from '@anydone/treeleaf_js_utils';\nimport App from 'containers/App';\nimport BotList from 'containers/Bot/BotList';\nimport config from './utils/config';\n\n// Import root app\n\n// Import Language Provider\n\n// Load the favicon and the .htaccess file\n// import '!file-loader?name=[name].[ext]!./assets/anydone_logo.svg';\n// import 'file-loader?name=.htaccess!./.htaccess'; // eslint-disable-line import/extensions\n\nimport configureStore from './configureStore';\n\n// Import i18n messages\n\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\n\n// When Open Sans is loaded, add a font-family using Open Sans to the body\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n});\n\n// Create redux store with history\nconst initialState = {};\nconst store = configureStore(initialState, history);\nconst MOUNT_NODE = document.getElementById('app');\n// const { deskUrl, inboxUrl } = config;\n\n// TreeleafStorage.acceptQueriesFromRemote([\n//   inboxUrl,\n//   deskUrl,\n//   'https://app.anydone.com',\n//   'https://app.anydone.net',\n//   'http://localhost:4500',\n//   'http://localhost:3000',\n// ]);\n// const render = messages => {\n//   ReactDOM.render(\n//     <Provider store={store}>\n//       <ConnectedRouter history={history}>\n//         <BotList />\n//       </ConnectedRouter>\n//     </Provider>,\n//     MOUNT_NODE,\n//   );\n// };\nexport { BotList };\n\n// if (module.hot) {\n//   // Hot reloadable React components and translation json files\n//   // modules.hot.accept does not accept dynamic dependencies,\n//   // have to be constants at compile-time\n//   module.hot.accept(['./i18n', 'containers/App'], () => {\n//     ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n//     render(translationMessages);\n//   });\n// }\n\n// Chunked polyfill for browsers without Intl support\n// if (!window.Intl) {\n//   new Promise(resolve => {\n//     resolve(import('intl'));\n//   })\n//     .then(() =>\n//       Promise.all([\n//         import('intl/locale-data/jsonp/en.js'),\n//         import('intl/locale-data/jsonp/de.js'),\n//       ]),\n//     ) // eslint-disable-line prettier/prettier\n//     .then(() => render(translationMessages))\n//     .catch(err => {\n//       throw err;\n//     });\n// } else {\n//   render(translationMessages);\n// }\n\n// Install ServiceWorker and AppCache in the end since\n// it's not most important operation and if main code fails,\n// we do not want it installed\n// if (process.env.NODE_ENV === 'production') {\n//   require('offline-plugin/runtime').install(); // eslint-disable-line global-require\n// }\n"],"names":["config","env","process","NODE_ENV","baseURL","REACT_APP_API_BASE_URL","mqttURL","REACT_APP_MQTT_BASE_URL","projectEnv","PROJECT_ENV","endpoints","subDomain","SUBDOMAIN","deskUrl","DESK_URL","inboxUrl","INBOX_URL","console","log","createReducer","injectedReducers","rootReducer","combineReducers","_objectSpread","global","globalReducer","router","connectRouter","history","configureStore","initialState","arguments","length","undefined","composeEnhancers","compose","reduxSagaMonitorOptions","window","_typeof","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__SAGA_MONITOR_EXTENSION__","_readOnlyError","loggerMiddleware","createLogger","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","push","enhancers","applyMiddleware","store","createStore","runSaga","run","injectedSagas","openSansObserver","FontFaceObserver","load","then","document","body","classList","add","getElementById"],"mappings":"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"}